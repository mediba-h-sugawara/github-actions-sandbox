name: Commit comment or pull request comment triggered build

on:
  push:
    branches: 
      - 'release/**'
  issue_comment:
    types:
      - created

jobs:
  check_enabled_event:
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    outputs:
      build_prepared: ${{ steps.build_target.outputs.build_prepared }}
      branch_name: ${{ steps.build_target.outputs.branch_name }}
      commit_hash: ${{ steps.build_target.outputs.commit_hash }}

    steps:
      - name: Get triggered event
        id: trigger_event
        run: |
          if [ "${{ github.event_name }}" = "push" ]; then
            if "${{ contains(github.event.head_commit.message, '[build]') }}"; then
              echo "::set-output name=name::pushed_branch"
            fi
          elif [ "${{ github.event_name }}" = "issue_comment" ] && [ "${{ toJson(github.event.issue.pull_request) }}" != "null" ]; then
            if "${{ contains(github.event.comment.body, '[build]') }}"; then
              echo "::set-output name=name::posted_pull_request_comment"
            fi
          fi

      - name: Set build target on push event
        id: build_target_on_push_event
        if: steps.trigger_event.outputs.name == 'pushed_branch'
        run: |
          echo "::set-output name=branch_name::${{ github.event.ref }}"
          echo "::set-output name=commit_hash::${{ github.sha }}"

      - name: Get compare branch on pull request comment event
        id: compare_branch
        if: steps.trigger_event.outputs.name == 'posted_pull_request_comment'
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pull_request = await github.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            })
            return pull_request.data.head

      - name: Set build target on pull request comment event
        id: build_target_on_pull_request_comment_event
        if: steps.trigger_event.outputs.name == 'posted_pull_request_comment'
        run: |
          echo "::set-output name=branch_name::refs/heads/${{ fromJson(steps.compare_branch.outputs.result).ref }}"
          echo "::set-output name=commit_hash::${{ fromJson(steps.compare_branch.outputs.result).sha }}"

      - name: Set build target
        id: build_target
        run: |
          is_build_prepared=false
          if [ "${{ steps.trigger_event.outputs.name }}" == "pushed_branch" ]; then
            is_build_prepared=true
            echo "::set-output name=branch_name::${{ steps.build_target_on_push_event.outputs.branch_name }}"
            echo "::set-output name=commit_hash::${{ steps.build_target_on_push_event.outputs.commit_hash }}"
          elif [ "${{ steps.trigger_event.outputs.name }}" == "posted_pull_request_comment" ]; then
            is_build_prepared=true
            echo "::set-output name=branch_name::${{ steps.build_target_on_pull_request_comment_event.outputs.branch_name }}"
            echo "::set-output name=commit_hash::${{ steps.build_target_on_pull_request_comment_event.outputs.commit_hash }}"
          fi
          echo "::set-output name=build_prepared::${is_build_prepared}"

  build:
    needs: check_enabled_event
    if: needs.check_enabled_event.outputs.build_prepared == 'true'

    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
      - name: Dump
        run: |
          echo "${{ needs.check_enabled_event.outputs.build_prepared }}"
          echo "${{ needs.check_enabled_event.outputs.branch_name }}"
          echo "${{ needs.check_enabled_event.outputs.commit_hash }}"

  notify_slack:
    needs: build
    if: always()

    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
      - name: Check build prepared status
        if: needs.check_enabled_event.result != 'success' || needs.check_enabled_event.outputs.build_prepared != 'true'
        run: |
          exit 1

      - name: Check build conclusion
        uses: technote-space/workflow-conclusion-action@v1

      - name: Notify slack on build success
        if: env.WORKFLOW_CONCLUSION == 'success'
        run: |
          echo "Notify slack on success."

      - name: Notify slack on build failure
        if: env.WORKFLOW_CONCLUSION != 'success'
        run: |
          echo "Notify slack on failure."
