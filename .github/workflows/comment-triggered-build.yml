name: Commit comment or pull request comment triggered build

on:
  push:
    branches: 
      - 'release/**'
  issue_comment:
    types:
      - created

jobs:
  check_release_branch_pushed:
    if: github.event_name == 'push' && contains(github.event.head_commit.message, '[build]')

    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    outputs:
      target_branch_name: ${{ steps.build_target.outputs.branch_name }}
      target_commit_hash: ${{ steps.build_target.outputs.commit_hash }}

    steps:
      - name: Set build target
        id: build_target
        run: |
          echo "::set-output name=branch_name::${{ github.event.ref }}"
          echo "::set-output name=commit_hash::${{ github.sha }}"

  check_pull_request_comment_posted:
    if: github.event_name == 'issue_comment' && toJson(github.event.issue.pull_request) != null && contains(github.event.comment.body, '[build]')

    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    outputs:
      target_branch_name: ${{ steps.build_target.outputs.branch_name }}
      target_commit_hash: ${{ steps.build_target.outputs.commit_hash }}

    steps:
      - name: Get compare branch
        id: compare_branch
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pull_request = await github.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            })
            return pull_request.data.head

      - name: Set build target
        id: build_target
        run: |
          echo "::set-output name=branch_name::refs/heads/${{ fromJson(steps.compare_branch.outputs.result).ref }}"
          echo "::set-output name=commit_hash::${{ fromJson(steps.compare_branch.outputs.result).sha }}"

  prepare_to_build:
    needs: [ check_release_branch_pushed, check_pull_request_comment_posted ]
    if: always()

    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    outputs:
      is_prepared: ${{ steps.build_target.outputs.is_prepared }}
      target_branch_name: ${{ steps.build_target.outputs.branch_name }}
      target_commit_hash: ${{ steps.build_target.outputs.commit_hash }}

    steps:
      - name: Set build target
        id: build_target
        run: |
          is_prepared=${{ false }}
          if [ "${{ needs.check_release_branch_pushed.result }}" = "success" ]; then
            is_prepared=${{ true }}
            echo "::set-output name=branch_name::${{ needs.check_release_branch_pushed.outputs.target_branch_name }}"
            echo "::set-output name=commit_hash::${{ needs.check_release_branch_pushed.outputs.target_commit_hash }}"
          elif [ "${{ needs.check_pull_request_comment_posted.result }}" = "success" ]; then
            is_prepared=${{ true }}
            echo "::set-output name=branch_name::${{ needs.check_pull_request_comment_posted.outputs.branch_name }}"
            echo "::set-output name=commit_hash::${{ needs.check_pull_request_comment_posted.outputs.commit_hash }}"
          fi
          echo "::set-output name=is_prepared::${is_prepared}"

  build:
    needs: prepare_to_build
    if: needs.prepare_to_build.outputs.is_prepared

    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
      - name: Dump
        run: |
          echo "${{ needs.check_enabled_trigger_event.outputs.target_branch_name }}"
          echo "${{ needs.check_enabled_trigger_event.outputs.target_commit_hash }}"
