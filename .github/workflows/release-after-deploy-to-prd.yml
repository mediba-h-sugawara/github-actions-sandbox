name: Post processing after deploy to production

on:
  pull_request:
    branches:
      - master
    types:
      - closed

jobs:
  check_post_processing_enabled:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true

    defaults:
      run:
        shell: bash

    steps:
      - name: Get tag name from user reserved
        id: user_reserved_tag
        if: github.event.pull_request.body != ""
        run: |
          tag_name=`echo "${{ github.event.pull_request.body }}" | grep "tag:" | tail -n 1 | sed -E "s/tag: (v([0-9]+.[0-9]+.[0-9]+))/\1/"`
          echo "::set-output name=result::${tag_name}"

      - name: Get tag name from latest the release
        id: latest_release_tag
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const latest_release = await github.repos.getLatestRelease({
              owner: context.repo.owner,
              repo: context.repo.repo
            })
            return latest_release.data.tag_name
    
      - name: Determine next the release tag name
        id: next_release_tag
        env:
          DEFAULT_RELEASE_TAG_NAME: v1.0.0
        run: |
          release_tag_name="${DEFAULT_RELEASE_TAG_NAME}"
          if [ -n "${{ steps.latest_release_tag.outputs.result }}" ]; then
            release_tag_name="${{ steps.latest_release_tag.outputs.result }}"
          fi
          if [ -n "${{ steps.user_reserved_tag.outputs.result }}" ]; then
            release_tag_name="${{ steps.user_reserved_tag.outputs.result }}"
          fi
          echo "::set-output name=name::${release_tag_name}"

      - name: Set next the release tag name
        run: |
          echo "${{ steps.next_release_tag.outputs.name }}"
