name: Create release after deploy to production

on:
  pull_request:
    branches:
      - master
    types:
      - closed

jobs:
  create_release:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true && startsWith(github.event.pull_request.head.ref, 'release/')

    defaults:
      run:
        shell: bash

    steps:
      - name: Get tag name from latest the release
        id: latest_release_tag
        uses: actions/github-script@v3
        continue-on-error: true
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          result-encoding: string
          script: |
            const latest_release = await github.repos.getLatestRelease({
              owner: context.repo.owner,
              repo: context.repo.repo
            })
            return latest_release.data.tag_name

      - name: Search pull request body for user reserved tag name
        id: regex_match
        if: github.event.pull_request.body != ''
        uses: actions-ecosystem/action-regex-match@v2
        with:
          text: ${{ github.event.pull_request.body }}
          regex: 'tag: (v([0-9]+.[0-9]+.[0-9]+))'

      - name: Get tag name from search results
        id: user_reserved_tag
        if: steps.regex_match.outputs.match != ''
        run: |
          echo "::set-output name=result::${{ steps.regex_match.outputs.group1 }}"

      - name: Determine tag name of next the release 
        id: next_release_tag
        env:
          DEFAULT_RELEASE_TAG_NAME: v1.0.0
        run: |
          release_tag_name="${DEFAULT_RELEASE_TAG_NAME}"
          if [ -n "${{ steps.latest_release_tag.outputs.result }}" ]; then
            release_tag_name=`echo "${{ steps.latest_release_tag.outputs.result }}" | awk -F . '{print $1 "." $2+1 "." "0"}'`
          fi
          if [ -n "${{ steps.user_reserved_tag.outputs.result }}" ]; then
            release_tag_name="${{ steps.user_reserved_tag.outputs.result }}"
          fi
          echo "::set-output name=name::${release_tag_name}"

      - name: Determine title of next the release
        id: next_release_title
        run: |
          compare_branch_name="${{ github.event.pull_request.head.ref }}"
          echo "::set-output name=value::${compare_branch_name^}"

      - name: Determine describe of next the release
        id: next_release_describe
        run: |
          describe=`echo "${{ github.event.pull_request.body }}" | grep -v "tag:"`
          describe="${describe//$'\n'/'\n'}"
          describe="${describe//$'\r'/'\r'}"
          echo "::set-output name=content::${describe}"

      - name: Show a next the release info
        run: |
          echo "tag_name: ${{ steps.next_release_tag.outputs.name }}"
          echo "title: ${{ steps.next_release_title.outputs.value }}"
          echo "body: ${{ steps.next_release_describe.outputs.content }}"

      - name: Create a next the release
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: '${{ steps.next_release_tag.outputs.name }}',
              name: '${{ steps.next_release_title.outputs.value }}',
              body: '${{ steps.next_release_describe.outputs.content }}'
            })
